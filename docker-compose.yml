version: '3'

services:
  traefik:
    image: traefik:v2.5.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.home`)"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.service=api@internal"
    container_name: traefik
    ports:
      - 80:80
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 443:443/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/tim/docker-compose/traefik.toml:/etc/traefik/traefik.toml
    networks:
      - home
    extra_hosts:
      - host.docker.internal:172.17.0.1

  homeassistant:
    image: homeassistant/home-assistant:2021.8.8
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`ha.home`)"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
    container_name: homeassistant
    hostname: homeassistant 
    network_mode: host
    depends_on:
      - transmission
      - deconz
      - influxdb
      - grafana
      - telegraf
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8123"]
      interval: 5s
      timeout: 3s
      retries: 100
    restart: unless-stopped
    privileged: true
    environment:
      - TZ=Europe/Amsterdam
    devices:
      - /dev/ttyAMA0
    volumes:
      - /home/tim/homeassistant/config:/config
    ports:
      - 8123:8123
    expose:
      - 8123

  deconz:
    image: marthoc/deconz:2.12.06
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deconz.rule=Host(`deconz.home`)"
      - "traefik.http.services.deconz.loadbalancer.server.port=8080"
    container_name: deconz
    hostname: deconz 
    network_mode: host
    restart: unless-stopped
    environment:
      - DECONZ_WEB_PORT=8080
      - DECONZ_WS_PORT=8443
      - TZ=Europe/Amsterdam
      - DECONZ_UPNP=0
      - DECONZ_DEVICE=/dev/ttyACM0
    devices:
     - /dev/ttyACM0
    volumes:
      - /home/tim/deconz/config:/root/.local/share/dresden-elektronik/deCONZ
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8443:8443
    expose:
      - 8443

  influxdb:
    image: influxdb:1.8.9
    container_name: influxdb 
    restart: unless-stopped
    hostname: influxdb
    environment:
      - INFLUXDB_DB=home_assistant
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    volumes:
      - /home/tim/influxdb:/var/lib/influxdb
      - /home/tim/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    ports:
      - 8086:8086

  grafana:
    image: grafana/grafana:8.1.2
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.home`)"
    container_name: grafana
    hostname: grafana
    user: 0:0
    depends_on:
      - telegraf
    restart: unless-stopped
    volumes:
      - /home/tim/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - home

  telegraf:
    image: telegraf:1.19.3
    container_name: telegraf
    hostname: telegraf
    privileged: true
    depends_on:
      - influxdb
    restart: unless-stopped
    links:
      - influxdb
    environment:
      - HOST_PROC=/hostfs/proc
      - HOST_MOUNT_PREFIX=/hostfs
      - TELEGRAF_DB_PASSWORD=${TELEGRAF_DB_PASSWORD}
    volumes:
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  transmission:
    image: linuxserver/transmission:3.00-r2-ls97
    labels:
      - "traefik.http.routers.transmission.rule=Host(`transmission.home`)"
    container_name: transmission
    hostname: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - TRANSMISSION_WEB_HOME=/combustion-release/
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - /home/tim/transmission/data:/config
      - /home/tim/ext-hd/transmission/downloads:/downloads
      - /home/tim/transmission/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    networks:
      - home

  sonarr:
    image: linuxserver/sonarr:3.0.6.1265-ls111
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.home`)"
    container_name: sonarr
    hostname: sonarr
    depends_on:
      - jackett
      - transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /home/tim/sonarr/data:/config
      - /home/tim/ext-hd/sonarr/tvseries:/tv
      - /home/tim/ext-hd/transmission/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - home
  
  radarr:
    image: linuxserver/radarr:3.2.2.5080-ls105
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.home`)"
    container_name: radarr
    hostname: radarr
    depends_on:
      - jackett
      - transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /home/tim/radarr/data:/config
      - /home/tim/ext-hd/radarr/movies:/movies
      - /home/tim/ext-hd/transmission/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - home

  jackett:
    image: linuxserver/jackett:v0.18.587-ls40
    labels:
      - "traefik.http.routers.jackett.rule=Host(`jackett.home`)"
    container_name: jackett
    hostname: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - /home/tim/jackett/data:/config
      - /home/tim/ext-hd/transmission/watch:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
    networks:
      - home

  plex:
    image: linuxserver/plex:1.24.0.4930-ab6e1a058-ls68
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.home`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    container_name: plex
    hostname: plex
    network_mode: host
    depends_on:
      - sonarr
      - radarr
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /home/tim/plex/data:/config
      - /home/tim/ext-hd/sonarr/tvseries:/tv
      - /home/tim/ext-hd/radarr/movies:/movies
      - /tmp/transcoding:/tmp/transcoding
    restart: unless-stopped

  pihole:
    image: pihole/pihole:v5.8
    labels:
      - "traefik.enable=true"

      # web interface
      - "traefik.http.routers.pihole.rule=Host(`pihole.home`)"
      - "traefik.http.routers.pihole.entrypoints=http"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"

      # Normal DNS coming in on 53 TCP, no TLS
      - "traefik.tcp.routers.dns.rule=HostSNI(`pihole.home`)"
      - "traefik.tcp.routers.dns.entrypoints=dns"
      - "traefik.tcp.routers.dns.service=pihole"
      - "traefik.tcp.services.pihole.loadbalancer.server.port=53"

      # Normal DNS coming in on 53 UDP
      - "traefik.udp.routers.udpdns.entrypoints=udpdns"
      - "traefik.udp.routers.udpdns.service=pihole"
      - "traefik.udp.services.pihole.loadbalancer.server.port=53"

      # Normal DNS coming in on 67 UDP
      - "traefik.udp.routers.dhcp.entrypoints=udpdhcp"
      - "traefik.udp.routers.dhcp.service=pihole"
      - "traefik.udp.services.pihole.loadbalancer.server.port=67"
    container_name: pihole
    user: "0"
    environment:
      - TZ=Netherlands/Amsterdam
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=pihole.home
      - DNS1=1.1.1.1
      - DNS2=1.0.0.1
    volumes:
      - /home/tim/pihole/etc-pihole/:/etc/pihole/
      - /home/tim/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    restart: unless-stopped
    networks:
      - home

networks:
  home:
